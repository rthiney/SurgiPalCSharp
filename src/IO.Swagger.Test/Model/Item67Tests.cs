/* 
 * surgipal_master
 *
 * API generated with [PHP-CRUD-API](https://github.com/mevdschee/php-crud-api)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing Item67
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class Item67Tests
    {
        // TODO uncomment below to declare an instance variable for Item67
        //private Item67 instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Item67
            //instance = new Item67();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Item67
        /// </summary>
        [Test]
        public void Item67InstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Item67
            //Assert.IsInstanceOfType<Item67> (instance, "variable 'instance' is a Item67");
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'ManagerName'
        /// </summary>
        [Test]
        public void ManagerNameTest()
        {
            // TODO unit test for the property 'ManagerName'
        }
        /// <summary>
        /// Test the property 'ManagerPhone'
        /// </summary>
        [Test]
        public void ManagerPhoneTest()
        {
            // TODO unit test for the property 'ManagerPhone'
        }
        /// <summary>
        /// Test the property 'ManagerPager'
        /// </summary>
        [Test]
        public void ManagerPagerTest()
        {
            // TODO unit test for the property 'ManagerPager'
        }
        /// <summary>
        /// Test the property 'ManagerEmail'
        /// </summary>
        [Test]
        public void ManagerEmailTest()
        {
            // TODO unit test for the property 'ManagerEmail'
        }
        /// <summary>
        /// Test the property 'Address'
        /// </summary>
        [Test]
        public void AddressTest()
        {
            // TODO unit test for the property 'Address'
        }
        /// <summary>
        /// Test the property 'Suite'
        /// </summary>
        [Test]
        public void SuiteTest()
        {
            // TODO unit test for the property 'Suite'
        }
        /// <summary>
        /// Test the property 'City'
        /// </summary>
        [Test]
        public void CityTest()
        {
            // TODO unit test for the property 'City'
        }
        /// <summary>
        /// Test the property 'PostalCode'
        /// </summary>
        [Test]
        public void PostalCodeTest()
        {
            // TODO unit test for the property 'PostalCode'
        }
        /// <summary>
        /// Test the property 'StateId'
        /// </summary>
        [Test]
        public void StateIdTest()
        {
            // TODO unit test for the property 'StateId'
        }
        /// <summary>
        /// Test the property 'CountryId'
        /// </summary>
        [Test]
        public void CountryIdTest()
        {
            // TODO unit test for the property 'CountryId'
        }
        /// <summary>
        /// Test the property 'StateTyped'
        /// </summary>
        [Test]
        public void StateTypedTest()
        {
            // TODO unit test for the property 'StateTyped'
        }
        /// <summary>
        /// Test the property 'UserRole'
        /// </summary>
        [Test]
        public void UserRoleTest()
        {
            // TODO unit test for the property 'UserRole'
        }
        /// <summary>
        /// Test the property 'Phone'
        /// </summary>
        [Test]
        public void PhoneTest()
        {
            // TODO unit test for the property 'Phone'
        }
        /// <summary>
        /// Test the property 'Pager'
        /// </summary>
        [Test]
        public void PagerTest()
        {
            // TODO unit test for the property 'Pager'
        }

    }

}
