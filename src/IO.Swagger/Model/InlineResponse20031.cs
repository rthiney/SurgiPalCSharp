/* 
 * surgipal_master
 *
 * API generated with [PHP-CRUD-API](https://github.com/mevdschee/php-crud-api)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Model
{
    /// <summary>
    /// InlineResponse20031
    /// </summary>
    [DataContract]
    public partial class InlineResponse20031 :  IEquatable<InlineResponse20031>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse20031" /> class.
        /// </summary>
        /// <param name="SurgeryId">SurgeryId.</param>
        /// <param name="Patient">Patient.</param>
        /// <param name="Term">Term.</param>
        /// <param name="CreatedAt">CreatedAt.</param>
        /// <param name="Reschedules">Reschedules.</param>
        /// <param name="Cancelled">Cancelled.</param>
        /// <param name="Completed">Completed.</param>
        /// <param name="Speciality">Speciality.</param>
        /// <param name="CardId">CardId.</param>
        /// <param name="PreferenceCardName">PreferenceCardName.</param>
        /// <param name="Initials">Initials.</param>
        /// <param name="SurgeryTime">SurgeryTime.</param>
        /// <param name="AdmissionStatus">AdmissionStatus.</param>
        /// <param name="Cpt">Cpt.</param>
        /// <param name="DiagnosisCode">DiagnosisCode.</param>
        /// <param name="SurgerySnapshot">SurgerySnapshot.</param>
        /// <param name="HospitalId">HospitalId.</param>
        /// <param name="HospitalEmail">HospitalEmail.</param>
        /// <param name="Hospital">Hospital.</param>
        /// <param name="DoctorFosId">DoctorFosId.</param>
        /// <param name="DoctorEmail">DoctorEmail.</param>
        /// <param name="DoctorDataId">DoctorDataId.</param>
        /// <param name="DoctorImage">DoctorImage.</param>
        /// <param name="FirstName">FirstName.</param>
        /// <param name="LastName">LastName.</param>
        /// <param name="CoordinatorName">CoordinatorName.</param>
        /// <param name="CoordinatorPhone">CoordinatorPhone.</param>
        /// <param name="CoordinatorEmail">CoordinatorEmail.</param>
        /// <param name="OfficePhone">OfficePhone.</param>
        /// <param name="Pager">Pager.</param>
        /// <param name="CompanyName">CompanyName.</param>
        /// <param name="BillingCoordinatorName">BillingCoordinatorName.</param>
        /// <param name="BillingCoordinatorPhone">BillingCoordinatorPhone.</param>
        /// <param name="BillingCoordinatorEmail">BillingCoordinatorEmail.</param>
        /// <param name="ManagerName">ManagerName.</param>
        /// <param name="ManagerPhone">ManagerPhone.</param>
        /// <param name="ManagerEmail">ManagerEmail.</param>
        public InlineResponse20031(int? SurgeryId = null, string Patient = null, string Term = null, string CreatedAt = null, string Reschedules = null, int? Cancelled = null, int? Completed = null, string Speciality = null, int? CardId = null, string PreferenceCardName = null, string Initials = null, string SurgeryTime = null, string AdmissionStatus = null, string Cpt = null, string DiagnosisCode = null, int? SurgerySnapshot = null, int? HospitalId = null, string HospitalEmail = null, string Hospital = null, int? DoctorFosId = null, string DoctorEmail = null, int? DoctorDataId = null, string DoctorImage = null, string FirstName = null, string LastName = null, string CoordinatorName = null, string CoordinatorPhone = null, string CoordinatorEmail = null, string OfficePhone = null, string Pager = null, string CompanyName = null, string BillingCoordinatorName = null, string BillingCoordinatorPhone = null, string BillingCoordinatorEmail = null, string ManagerName = null, string ManagerPhone = null, string ManagerEmail = null)
        {
            this.SurgeryId = SurgeryId;
            this.Patient = Patient;
            this.Term = Term;
            this.CreatedAt = CreatedAt;
            this.Reschedules = Reschedules;
            this.Cancelled = Cancelled;
            this.Completed = Completed;
            this.Speciality = Speciality;
            this.CardId = CardId;
            this.PreferenceCardName = PreferenceCardName;
            this.Initials = Initials;
            this.SurgeryTime = SurgeryTime;
            this.AdmissionStatus = AdmissionStatus;
            this.Cpt = Cpt;
            this.DiagnosisCode = DiagnosisCode;
            this.SurgerySnapshot = SurgerySnapshot;
            this.HospitalId = HospitalId;
            this.HospitalEmail = HospitalEmail;
            this.Hospital = Hospital;
            this.DoctorFosId = DoctorFosId;
            this.DoctorEmail = DoctorEmail;
            this.DoctorDataId = DoctorDataId;
            this.DoctorImage = DoctorImage;
            this.FirstName = FirstName;
            this.LastName = LastName;
            this.CoordinatorName = CoordinatorName;
            this.CoordinatorPhone = CoordinatorPhone;
            this.CoordinatorEmail = CoordinatorEmail;
            this.OfficePhone = OfficePhone;
            this.Pager = Pager;
            this.CompanyName = CompanyName;
            this.BillingCoordinatorName = BillingCoordinatorName;
            this.BillingCoordinatorPhone = BillingCoordinatorPhone;
            this.BillingCoordinatorEmail = BillingCoordinatorEmail;
            this.ManagerName = ManagerName;
            this.ManagerPhone = ManagerPhone;
            this.ManagerEmail = ManagerEmail;
        }
        
        /// <summary>
        /// Gets or Sets SurgeryId
        /// </summary>
        [DataMember(Name="surgeryId", EmitDefaultValue=false)]
        public int? SurgeryId { get; set; }
        /// <summary>
        /// Gets or Sets Patient
        /// </summary>
        [DataMember(Name="patient", EmitDefaultValue=false)]
        public string Patient { get; set; }
        /// <summary>
        /// Gets or Sets Term
        /// </summary>
        [DataMember(Name="term", EmitDefaultValue=false)]
        public string Term { get; set; }
        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name="created_at", EmitDefaultValue=false)]
        public string CreatedAt { get; set; }
        /// <summary>
        /// Gets or Sets Reschedules
        /// </summary>
        [DataMember(Name="reschedules", EmitDefaultValue=false)]
        public string Reschedules { get; set; }
        /// <summary>
        /// Gets or Sets Cancelled
        /// </summary>
        [DataMember(Name="cancelled", EmitDefaultValue=false)]
        public int? Cancelled { get; set; }
        /// <summary>
        /// Gets or Sets Completed
        /// </summary>
        [DataMember(Name="completed", EmitDefaultValue=false)]
        public int? Completed { get; set; }
        /// <summary>
        /// Gets or Sets Speciality
        /// </summary>
        [DataMember(Name="speciality", EmitDefaultValue=false)]
        public string Speciality { get; set; }
        /// <summary>
        /// Gets or Sets CardId
        /// </summary>
        [DataMember(Name="card_id", EmitDefaultValue=false)]
        public int? CardId { get; set; }
        /// <summary>
        /// Gets or Sets PreferenceCardName
        /// </summary>
        [DataMember(Name="preferenceCardName", EmitDefaultValue=false)]
        public string PreferenceCardName { get; set; }
        /// <summary>
        /// Gets or Sets Initials
        /// </summary>
        [DataMember(Name="initials", EmitDefaultValue=false)]
        public string Initials { get; set; }
        /// <summary>
        /// Gets or Sets SurgeryTime
        /// </summary>
        [DataMember(Name="surgeryTime", EmitDefaultValue=false)]
        public string SurgeryTime { get; set; }
        /// <summary>
        /// Gets or Sets AdmissionStatus
        /// </summary>
        [DataMember(Name="admissionStatus", EmitDefaultValue=false)]
        public string AdmissionStatus { get; set; }
        /// <summary>
        /// Gets or Sets Cpt
        /// </summary>
        [DataMember(Name="cpt", EmitDefaultValue=false)]
        public string Cpt { get; set; }
        /// <summary>
        /// Gets or Sets DiagnosisCode
        /// </summary>
        [DataMember(Name="diagnosisCode", EmitDefaultValue=false)]
        public string DiagnosisCode { get; set; }
        /// <summary>
        /// Gets or Sets SurgerySnapshot
        /// </summary>
        [DataMember(Name="surgerySnapshot", EmitDefaultValue=false)]
        public int? SurgerySnapshot { get; set; }
        /// <summary>
        /// Gets or Sets HospitalId
        /// </summary>
        [DataMember(Name="hospitalId", EmitDefaultValue=false)]
        public int? HospitalId { get; set; }
        /// <summary>
        /// Gets or Sets HospitalEmail
        /// </summary>
        [DataMember(Name="hospitalEmail", EmitDefaultValue=false)]
        public string HospitalEmail { get; set; }
        /// <summary>
        /// Gets or Sets Hospital
        /// </summary>
        [DataMember(Name="hospital", EmitDefaultValue=false)]
        public string Hospital { get; set; }
        /// <summary>
        /// Gets or Sets DoctorFosId
        /// </summary>
        [DataMember(Name="doctorFosId", EmitDefaultValue=false)]
        public int? DoctorFosId { get; set; }
        /// <summary>
        /// Gets or Sets DoctorEmail
        /// </summary>
        [DataMember(Name="doctorEmail", EmitDefaultValue=false)]
        public string DoctorEmail { get; set; }
        /// <summary>
        /// Gets or Sets DoctorDataId
        /// </summary>
        [DataMember(Name="doctorDataId", EmitDefaultValue=false)]
        public int? DoctorDataId { get; set; }
        /// <summary>
        /// Gets or Sets DoctorImage
        /// </summary>
        [DataMember(Name="doctorImage", EmitDefaultValue=false)]
        public string DoctorImage { get; set; }
        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name="firstName", EmitDefaultValue=false)]
        public string FirstName { get; set; }
        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name="lastName", EmitDefaultValue=false)]
        public string LastName { get; set; }
        /// <summary>
        /// Gets or Sets CoordinatorName
        /// </summary>
        [DataMember(Name="coordinatorName", EmitDefaultValue=false)]
        public string CoordinatorName { get; set; }
        /// <summary>
        /// Gets or Sets CoordinatorPhone
        /// </summary>
        [DataMember(Name="coordinatorPhone", EmitDefaultValue=false)]
        public string CoordinatorPhone { get; set; }
        /// <summary>
        /// Gets or Sets CoordinatorEmail
        /// </summary>
        [DataMember(Name="coordinatorEmail", EmitDefaultValue=false)]
        public string CoordinatorEmail { get; set; }
        /// <summary>
        /// Gets or Sets OfficePhone
        /// </summary>
        [DataMember(Name="officePhone", EmitDefaultValue=false)]
        public string OfficePhone { get; set; }
        /// <summary>
        /// Gets or Sets Pager
        /// </summary>
        [DataMember(Name="pager", EmitDefaultValue=false)]
        public string Pager { get; set; }
        /// <summary>
        /// Gets or Sets CompanyName
        /// </summary>
        [DataMember(Name="companyName", EmitDefaultValue=false)]
        public string CompanyName { get; set; }
        /// <summary>
        /// Gets or Sets BillingCoordinatorName
        /// </summary>
        [DataMember(Name="billingCoordinatorName", EmitDefaultValue=false)]
        public string BillingCoordinatorName { get; set; }
        /// <summary>
        /// Gets or Sets BillingCoordinatorPhone
        /// </summary>
        [DataMember(Name="billingCoordinatorPhone", EmitDefaultValue=false)]
        public string BillingCoordinatorPhone { get; set; }
        /// <summary>
        /// Gets or Sets BillingCoordinatorEmail
        /// </summary>
        [DataMember(Name="billingCoordinatorEmail", EmitDefaultValue=false)]
        public string BillingCoordinatorEmail { get; set; }
        /// <summary>
        /// Gets or Sets ManagerName
        /// </summary>
        [DataMember(Name="managerName", EmitDefaultValue=false)]
        public string ManagerName { get; set; }
        /// <summary>
        /// Gets or Sets ManagerPhone
        /// </summary>
        [DataMember(Name="managerPhone", EmitDefaultValue=false)]
        public string ManagerPhone { get; set; }
        /// <summary>
        /// Gets or Sets ManagerEmail
        /// </summary>
        [DataMember(Name="managerEmail", EmitDefaultValue=false)]
        public string ManagerEmail { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse20031 {\n");
            sb.Append("  SurgeryId: ").Append(SurgeryId).Append("\n");
            sb.Append("  Patient: ").Append(Patient).Append("\n");
            sb.Append("  Term: ").Append(Term).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  Reschedules: ").Append(Reschedules).Append("\n");
            sb.Append("  Cancelled: ").Append(Cancelled).Append("\n");
            sb.Append("  Completed: ").Append(Completed).Append("\n");
            sb.Append("  Speciality: ").Append(Speciality).Append("\n");
            sb.Append("  CardId: ").Append(CardId).Append("\n");
            sb.Append("  PreferenceCardName: ").Append(PreferenceCardName).Append("\n");
            sb.Append("  Initials: ").Append(Initials).Append("\n");
            sb.Append("  SurgeryTime: ").Append(SurgeryTime).Append("\n");
            sb.Append("  AdmissionStatus: ").Append(AdmissionStatus).Append("\n");
            sb.Append("  Cpt: ").Append(Cpt).Append("\n");
            sb.Append("  DiagnosisCode: ").Append(DiagnosisCode).Append("\n");
            sb.Append("  SurgerySnapshot: ").Append(SurgerySnapshot).Append("\n");
            sb.Append("  HospitalId: ").Append(HospitalId).Append("\n");
            sb.Append("  HospitalEmail: ").Append(HospitalEmail).Append("\n");
            sb.Append("  Hospital: ").Append(Hospital).Append("\n");
            sb.Append("  DoctorFosId: ").Append(DoctorFosId).Append("\n");
            sb.Append("  DoctorEmail: ").Append(DoctorEmail).Append("\n");
            sb.Append("  DoctorDataId: ").Append(DoctorDataId).Append("\n");
            sb.Append("  DoctorImage: ").Append(DoctorImage).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  CoordinatorName: ").Append(CoordinatorName).Append("\n");
            sb.Append("  CoordinatorPhone: ").Append(CoordinatorPhone).Append("\n");
            sb.Append("  CoordinatorEmail: ").Append(CoordinatorEmail).Append("\n");
            sb.Append("  OfficePhone: ").Append(OfficePhone).Append("\n");
            sb.Append("  Pager: ").Append(Pager).Append("\n");
            sb.Append("  CompanyName: ").Append(CompanyName).Append("\n");
            sb.Append("  BillingCoordinatorName: ").Append(BillingCoordinatorName).Append("\n");
            sb.Append("  BillingCoordinatorPhone: ").Append(BillingCoordinatorPhone).Append("\n");
            sb.Append("  BillingCoordinatorEmail: ").Append(BillingCoordinatorEmail).Append("\n");
            sb.Append("  ManagerName: ").Append(ManagerName).Append("\n");
            sb.Append("  ManagerPhone: ").Append(ManagerPhone).Append("\n");
            sb.Append("  ManagerEmail: ").Append(ManagerEmail).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as InlineResponse20031);
        }

        /// <summary>
        /// Returns true if InlineResponse20031 instances are equal
        /// </summary>
        /// <param name="other">Instance of InlineResponse20031 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse20031 other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.SurgeryId == other.SurgeryId ||
                    this.SurgeryId != null &&
                    this.SurgeryId.Equals(other.SurgeryId)
                ) && 
                (
                    this.Patient == other.Patient ||
                    this.Patient != null &&
                    this.Patient.Equals(other.Patient)
                ) && 
                (
                    this.Term == other.Term ||
                    this.Term != null &&
                    this.Term.Equals(other.Term)
                ) && 
                (
                    this.CreatedAt == other.CreatedAt ||
                    this.CreatedAt != null &&
                    this.CreatedAt.Equals(other.CreatedAt)
                ) && 
                (
                    this.Reschedules == other.Reschedules ||
                    this.Reschedules != null &&
                    this.Reschedules.Equals(other.Reschedules)
                ) && 
                (
                    this.Cancelled == other.Cancelled ||
                    this.Cancelled != null &&
                    this.Cancelled.Equals(other.Cancelled)
                ) && 
                (
                    this.Completed == other.Completed ||
                    this.Completed != null &&
                    this.Completed.Equals(other.Completed)
                ) && 
                (
                    this.Speciality == other.Speciality ||
                    this.Speciality != null &&
                    this.Speciality.Equals(other.Speciality)
                ) && 
                (
                    this.CardId == other.CardId ||
                    this.CardId != null &&
                    this.CardId.Equals(other.CardId)
                ) && 
                (
                    this.PreferenceCardName == other.PreferenceCardName ||
                    this.PreferenceCardName != null &&
                    this.PreferenceCardName.Equals(other.PreferenceCardName)
                ) && 
                (
                    this.Initials == other.Initials ||
                    this.Initials != null &&
                    this.Initials.Equals(other.Initials)
                ) && 
                (
                    this.SurgeryTime == other.SurgeryTime ||
                    this.SurgeryTime != null &&
                    this.SurgeryTime.Equals(other.SurgeryTime)
                ) && 
                (
                    this.AdmissionStatus == other.AdmissionStatus ||
                    this.AdmissionStatus != null &&
                    this.AdmissionStatus.Equals(other.AdmissionStatus)
                ) && 
                (
                    this.Cpt == other.Cpt ||
                    this.Cpt != null &&
                    this.Cpt.Equals(other.Cpt)
                ) && 
                (
                    this.DiagnosisCode == other.DiagnosisCode ||
                    this.DiagnosisCode != null &&
                    this.DiagnosisCode.Equals(other.DiagnosisCode)
                ) && 
                (
                    this.SurgerySnapshot == other.SurgerySnapshot ||
                    this.SurgerySnapshot != null &&
                    this.SurgerySnapshot.Equals(other.SurgerySnapshot)
                ) && 
                (
                    this.HospitalId == other.HospitalId ||
                    this.HospitalId != null &&
                    this.HospitalId.Equals(other.HospitalId)
                ) && 
                (
                    this.HospitalEmail == other.HospitalEmail ||
                    this.HospitalEmail != null &&
                    this.HospitalEmail.Equals(other.HospitalEmail)
                ) && 
                (
                    this.Hospital == other.Hospital ||
                    this.Hospital != null &&
                    this.Hospital.Equals(other.Hospital)
                ) && 
                (
                    this.DoctorFosId == other.DoctorFosId ||
                    this.DoctorFosId != null &&
                    this.DoctorFosId.Equals(other.DoctorFosId)
                ) && 
                (
                    this.DoctorEmail == other.DoctorEmail ||
                    this.DoctorEmail != null &&
                    this.DoctorEmail.Equals(other.DoctorEmail)
                ) && 
                (
                    this.DoctorDataId == other.DoctorDataId ||
                    this.DoctorDataId != null &&
                    this.DoctorDataId.Equals(other.DoctorDataId)
                ) && 
                (
                    this.DoctorImage == other.DoctorImage ||
                    this.DoctorImage != null &&
                    this.DoctorImage.Equals(other.DoctorImage)
                ) && 
                (
                    this.FirstName == other.FirstName ||
                    this.FirstName != null &&
                    this.FirstName.Equals(other.FirstName)
                ) && 
                (
                    this.LastName == other.LastName ||
                    this.LastName != null &&
                    this.LastName.Equals(other.LastName)
                ) && 
                (
                    this.CoordinatorName == other.CoordinatorName ||
                    this.CoordinatorName != null &&
                    this.CoordinatorName.Equals(other.CoordinatorName)
                ) && 
                (
                    this.CoordinatorPhone == other.CoordinatorPhone ||
                    this.CoordinatorPhone != null &&
                    this.CoordinatorPhone.Equals(other.CoordinatorPhone)
                ) && 
                (
                    this.CoordinatorEmail == other.CoordinatorEmail ||
                    this.CoordinatorEmail != null &&
                    this.CoordinatorEmail.Equals(other.CoordinatorEmail)
                ) && 
                (
                    this.OfficePhone == other.OfficePhone ||
                    this.OfficePhone != null &&
                    this.OfficePhone.Equals(other.OfficePhone)
                ) && 
                (
                    this.Pager == other.Pager ||
                    this.Pager != null &&
                    this.Pager.Equals(other.Pager)
                ) && 
                (
                    this.CompanyName == other.CompanyName ||
                    this.CompanyName != null &&
                    this.CompanyName.Equals(other.CompanyName)
                ) && 
                (
                    this.BillingCoordinatorName == other.BillingCoordinatorName ||
                    this.BillingCoordinatorName != null &&
                    this.BillingCoordinatorName.Equals(other.BillingCoordinatorName)
                ) && 
                (
                    this.BillingCoordinatorPhone == other.BillingCoordinatorPhone ||
                    this.BillingCoordinatorPhone != null &&
                    this.BillingCoordinatorPhone.Equals(other.BillingCoordinatorPhone)
                ) && 
                (
                    this.BillingCoordinatorEmail == other.BillingCoordinatorEmail ||
                    this.BillingCoordinatorEmail != null &&
                    this.BillingCoordinatorEmail.Equals(other.BillingCoordinatorEmail)
                ) && 
                (
                    this.ManagerName == other.ManagerName ||
                    this.ManagerName != null &&
                    this.ManagerName.Equals(other.ManagerName)
                ) && 
                (
                    this.ManagerPhone == other.ManagerPhone ||
                    this.ManagerPhone != null &&
                    this.ManagerPhone.Equals(other.ManagerPhone)
                ) && 
                (
                    this.ManagerEmail == other.ManagerEmail ||
                    this.ManagerEmail != null &&
                    this.ManagerEmail.Equals(other.ManagerEmail)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.SurgeryId != null)
                    hash = hash * 59 + this.SurgeryId.GetHashCode();
                if (this.Patient != null)
                    hash = hash * 59 + this.Patient.GetHashCode();
                if (this.Term != null)
                    hash = hash * 59 + this.Term.GetHashCode();
                if (this.CreatedAt != null)
                    hash = hash * 59 + this.CreatedAt.GetHashCode();
                if (this.Reschedules != null)
                    hash = hash * 59 + this.Reschedules.GetHashCode();
                if (this.Cancelled != null)
                    hash = hash * 59 + this.Cancelled.GetHashCode();
                if (this.Completed != null)
                    hash = hash * 59 + this.Completed.GetHashCode();
                if (this.Speciality != null)
                    hash = hash * 59 + this.Speciality.GetHashCode();
                if (this.CardId != null)
                    hash = hash * 59 + this.CardId.GetHashCode();
                if (this.PreferenceCardName != null)
                    hash = hash * 59 + this.PreferenceCardName.GetHashCode();
                if (this.Initials != null)
                    hash = hash * 59 + this.Initials.GetHashCode();
                if (this.SurgeryTime != null)
                    hash = hash * 59 + this.SurgeryTime.GetHashCode();
                if (this.AdmissionStatus != null)
                    hash = hash * 59 + this.AdmissionStatus.GetHashCode();
                if (this.Cpt != null)
                    hash = hash * 59 + this.Cpt.GetHashCode();
                if (this.DiagnosisCode != null)
                    hash = hash * 59 + this.DiagnosisCode.GetHashCode();
                if (this.SurgerySnapshot != null)
                    hash = hash * 59 + this.SurgerySnapshot.GetHashCode();
                if (this.HospitalId != null)
                    hash = hash * 59 + this.HospitalId.GetHashCode();
                if (this.HospitalEmail != null)
                    hash = hash * 59 + this.HospitalEmail.GetHashCode();
                if (this.Hospital != null)
                    hash = hash * 59 + this.Hospital.GetHashCode();
                if (this.DoctorFosId != null)
                    hash = hash * 59 + this.DoctorFosId.GetHashCode();
                if (this.DoctorEmail != null)
                    hash = hash * 59 + this.DoctorEmail.GetHashCode();
                if (this.DoctorDataId != null)
                    hash = hash * 59 + this.DoctorDataId.GetHashCode();
                if (this.DoctorImage != null)
                    hash = hash * 59 + this.DoctorImage.GetHashCode();
                if (this.FirstName != null)
                    hash = hash * 59 + this.FirstName.GetHashCode();
                if (this.LastName != null)
                    hash = hash * 59 + this.LastName.GetHashCode();
                if (this.CoordinatorName != null)
                    hash = hash * 59 + this.CoordinatorName.GetHashCode();
                if (this.CoordinatorPhone != null)
                    hash = hash * 59 + this.CoordinatorPhone.GetHashCode();
                if (this.CoordinatorEmail != null)
                    hash = hash * 59 + this.CoordinatorEmail.GetHashCode();
                if (this.OfficePhone != null)
                    hash = hash * 59 + this.OfficePhone.GetHashCode();
                if (this.Pager != null)
                    hash = hash * 59 + this.Pager.GetHashCode();
                if (this.CompanyName != null)
                    hash = hash * 59 + this.CompanyName.GetHashCode();
                if (this.BillingCoordinatorName != null)
                    hash = hash * 59 + this.BillingCoordinatorName.GetHashCode();
                if (this.BillingCoordinatorPhone != null)
                    hash = hash * 59 + this.BillingCoordinatorPhone.GetHashCode();
                if (this.BillingCoordinatorEmail != null)
                    hash = hash * 59 + this.BillingCoordinatorEmail.GetHashCode();
                if (this.ManagerName != null)
                    hash = hash * 59 + this.ManagerName.GetHashCode();
                if (this.ManagerPhone != null)
                    hash = hash * 59 + this.ManagerPhone.GetHashCode();
                if (this.ManagerEmail != null)
                    hash = hash * 59 + this.ManagerEmail.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            // Patient (string) maxLength
            if(this.Patient != null && this.Patient.Length > 255)
            {
                yield return new ValidationResult("Invalid value for Patient, length must be less than 255.", new [] { "Patient" });
            }

            // Reschedules (string) maxLength
            if(this.Reschedules != null && this.Reschedules.Length > -1)
            {
                yield return new ValidationResult("Invalid value for Reschedules, length must be less than -1.", new [] { "Reschedules" });
            }

            // Speciality (string) maxLength
            if(this.Speciality != null && this.Speciality.Length > 255)
            {
                yield return new ValidationResult("Invalid value for Speciality, length must be less than 255.", new [] { "Speciality" });
            }

            // PreferenceCardName (string) maxLength
            if(this.PreferenceCardName != null && this.PreferenceCardName.Length > 255)
            {
                yield return new ValidationResult("Invalid value for PreferenceCardName, length must be less than 255.", new [] { "PreferenceCardName" });
            }

            // Initials (string) maxLength
            if(this.Initials != null && this.Initials.Length > 255)
            {
                yield return new ValidationResult("Invalid value for Initials, length must be less than 255.", new [] { "Initials" });
            }

            // SurgeryTime (string) maxLength
            if(this.SurgeryTime != null && this.SurgeryTime.Length > 255)
            {
                yield return new ValidationResult("Invalid value for SurgeryTime, length must be less than 255.", new [] { "SurgeryTime" });
            }

            // AdmissionStatus (string) maxLength
            if(this.AdmissionStatus != null && this.AdmissionStatus.Length > 255)
            {
                yield return new ValidationResult("Invalid value for AdmissionStatus, length must be less than 255.", new [] { "AdmissionStatus" });
            }

            // Cpt (string) maxLength
            if(this.Cpt != null && this.Cpt.Length > 255)
            {
                yield return new ValidationResult("Invalid value for Cpt, length must be less than 255.", new [] { "Cpt" });
            }

            // DiagnosisCode (string) maxLength
            if(this.DiagnosisCode != null && this.DiagnosisCode.Length > 255)
            {
                yield return new ValidationResult("Invalid value for DiagnosisCode, length must be less than 255.", new [] { "DiagnosisCode" });
            }

            // HospitalEmail (string) maxLength
            if(this.HospitalEmail != null && this.HospitalEmail.Length > 255)
            {
                yield return new ValidationResult("Invalid value for HospitalEmail, length must be less than 255.", new [] { "HospitalEmail" });
            }

            // Hospital (string) maxLength
            if(this.Hospital != null && this.Hospital.Length > 255)
            {
                yield return new ValidationResult("Invalid value for Hospital, length must be less than 255.", new [] { "Hospital" });
            }

            // DoctorEmail (string) maxLength
            if(this.DoctorEmail != null && this.DoctorEmail.Length > 255)
            {
                yield return new ValidationResult("Invalid value for DoctorEmail, length must be less than 255.", new [] { "DoctorEmail" });
            }

            // DoctorImage (string) maxLength
            if(this.DoctorImage != null && this.DoctorImage.Length > 255)
            {
                yield return new ValidationResult("Invalid value for DoctorImage, length must be less than 255.", new [] { "DoctorImage" });
            }

            // FirstName (string) maxLength
            if(this.FirstName != null && this.FirstName.Length > 255)
            {
                yield return new ValidationResult("Invalid value for FirstName, length must be less than 255.", new [] { "FirstName" });
            }

            // LastName (string) maxLength
            if(this.LastName != null && this.LastName.Length > 255)
            {
                yield return new ValidationResult("Invalid value for LastName, length must be less than 255.", new [] { "LastName" });
            }

            // CoordinatorName (string) maxLength
            if(this.CoordinatorName != null && this.CoordinatorName.Length > 255)
            {
                yield return new ValidationResult("Invalid value for CoordinatorName, length must be less than 255.", new [] { "CoordinatorName" });
            }

            // CoordinatorPhone (string) maxLength
            if(this.CoordinatorPhone != null && this.CoordinatorPhone.Length > 255)
            {
                yield return new ValidationResult("Invalid value for CoordinatorPhone, length must be less than 255.", new [] { "CoordinatorPhone" });
            }

            // CoordinatorEmail (string) maxLength
            if(this.CoordinatorEmail != null && this.CoordinatorEmail.Length > 255)
            {
                yield return new ValidationResult("Invalid value for CoordinatorEmail, length must be less than 255.", new [] { "CoordinatorEmail" });
            }

            // OfficePhone (string) maxLength
            if(this.OfficePhone != null && this.OfficePhone.Length > 255)
            {
                yield return new ValidationResult("Invalid value for OfficePhone, length must be less than 255.", new [] { "OfficePhone" });
            }

            // Pager (string) maxLength
            if(this.Pager != null && this.Pager.Length > 255)
            {
                yield return new ValidationResult("Invalid value for Pager, length must be less than 255.", new [] { "Pager" });
            }

            // CompanyName (string) maxLength
            if(this.CompanyName != null && this.CompanyName.Length > 255)
            {
                yield return new ValidationResult("Invalid value for CompanyName, length must be less than 255.", new [] { "CompanyName" });
            }

            // BillingCoordinatorName (string) maxLength
            if(this.BillingCoordinatorName != null && this.BillingCoordinatorName.Length > 255)
            {
                yield return new ValidationResult("Invalid value for BillingCoordinatorName, length must be less than 255.", new [] { "BillingCoordinatorName" });
            }

            // BillingCoordinatorPhone (string) maxLength
            if(this.BillingCoordinatorPhone != null && this.BillingCoordinatorPhone.Length > 255)
            {
                yield return new ValidationResult("Invalid value for BillingCoordinatorPhone, length must be less than 255.", new [] { "BillingCoordinatorPhone" });
            }

            // BillingCoordinatorEmail (string) maxLength
            if(this.BillingCoordinatorEmail != null && this.BillingCoordinatorEmail.Length > 255)
            {
                yield return new ValidationResult("Invalid value for BillingCoordinatorEmail, length must be less than 255.", new [] { "BillingCoordinatorEmail" });
            }

            // ManagerName (string) maxLength
            if(this.ManagerName != null && this.ManagerName.Length > 255)
            {
                yield return new ValidationResult("Invalid value for ManagerName, length must be less than 255.", new [] { "ManagerName" });
            }

            // ManagerPhone (string) maxLength
            if(this.ManagerPhone != null && this.ManagerPhone.Length > 255)
            {
                yield return new ValidationResult("Invalid value for ManagerPhone, length must be less than 255.", new [] { "ManagerPhone" });
            }

            // ManagerEmail (string) maxLength
            if(this.ManagerEmail != null && this.ManagerEmail.Length > 255)
            {
                yield return new ValidationResult("Invalid value for ManagerEmail, length must be less than 255.", new [] { "ManagerEmail" });
            }

            yield break;
        }
    }

}
